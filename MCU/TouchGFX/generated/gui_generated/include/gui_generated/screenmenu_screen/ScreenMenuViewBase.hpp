/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SCREENMENUVIEWBASE_HPP
#define SCREENMENUVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/screenmenu_screen/ScreenMenuPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/containers/ScrollableContainer.hpp>
#include <gui/containers/CustomContainerMenuItemDataFrequency.hpp>
#include <gui/containers/CustomContainerMenuItemWifiPassword.hpp>
#include <gui/containers/CustomContainerMenuItemWifiSsid.hpp>
#include <gui/containers/CustomContainerMenuItemServerIP.hpp>
#include <gui/containers/CustomContainerMenuItemServerPort.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/ButtonWithLabel.hpp>

class ScreenMenuViewBase : public touchgfx::View<ScreenMenuPresenter>
{
public:
    ScreenMenuViewBase();
    virtual ~ScreenMenuViewBase();
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void LoadDefaultParameters()
    {
        // Override and implement this function in ScreenMenu
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Image Background;
    touchgfx::ScrollableContainer scrollableContainerMenu;
    CustomContainerMenuItemDataFrequency customContainerMenuItemDataFrequency;
    CustomContainerMenuItemWifiPassword customContainerMenuItemWifiPassword;
    CustomContainerMenuItemWifiSsid customContainerMenuItemWifiSsid;
    CustomContainerMenuItemServerIP customContainerMenuItemServerIP;
    CustomContainerMenuItemServerPort customContainerMenuItemServerPort;
    touchgfx::Image imageScrollSeparator;
    touchgfx::Container containerMenuBar;
    touchgfx::Image TopBar;
    touchgfx::TextArea textAreaMenu;
    touchgfx::ButtonWithLabel buttonLoadDefault;

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<ScreenMenuViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // SCREENMENUVIEWBASE_HPP
